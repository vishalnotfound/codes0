class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        

        //enter the loop
        //go first elmt
        //see if it exist in map
        //if not then add 1 in freq and move next
        //if yes then start from second elmt 
        //return max(count, currCount)

        int count = 0;

        for(size_t i =0; i<s.length(); i++){
            unordered_map<char, int> freq;
            int temp = 0;

           for(int j = i; j<s.length(); j++){

            if(freq.find(s[j]) == freq.end()){
                freq[s[j]] = 1;
                temp++;
            } else {
                    break;
                    } 
           }
            count = max(count, temp);
           

        }

return count;
    }
};
